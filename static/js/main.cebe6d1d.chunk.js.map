{"version":3,"sources":["Table.js","MenuSection.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Table","props","state","data","items","allTables","this","map","item","isLoading","editable","isAuth","onRowAdd","newData","Promise","resolve","setTimeout","collection","label","groupName","name","onCreate","onRowUpdate","oldData","onUpdate","onRowDelete","onDelete","columns","title","field","meals","food","description","picture","price","CircularProgress","style","maxWidth","React","Component","MenuSection","allData","handleCreateData","bind","handleDeleteData","handleUpdateData","refetchData","setState","fetch","then","response","json","err","console","log","insert","requestOptions","method","headers","authKey","body","JSON","stringify","operation","itemCopy","newData2","old","padding","textAlign","sushi","appetizers","main_dishes","drinks","Amplify","configure","region","userPoolId","userPoolWebClientId","Login","useState","username","setUsername","password","setPassword","setLoading","userAuth","value","userHasAuthenticated","onUserAuth","event","a","preventDefault","Auth","signIn","val","onLogin","signInUserSession","idToken","jwtToken","alert","message","isAuthenticated","signOut","useEffect","currentSession","catch","e","onClick","className","onSubmit","FormGroup","controlId","FormControl","autoFocus","type","onChange","target","Button","block","disabled","length","App","loginCallback","userAuthCallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cebe6d1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.items\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let allTables = this.props.items ? this.props.items.map(item => (\r\n      <MaterialTable\r\n        isLoading={this.props.isLoading}\r\n        editable={ this.props.isAuth ? {\r\n          onRowAdd: newData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                newData.collection = this.props.label;\r\n                newData.groupName = item.name;\r\n                this.props.onCreate(newData);\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                oldData.collection = this.props.label;\r\n                oldData.groupName = item.name;\r\n                this.props.onUpdate(oldData, newData);\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                oldData.collection = this.props.label;\r\n                oldData.groupName = item.name;\r\n                this.props.onDelete(oldData);\r\n                resolve();\r\n\r\n              }, 1000);\r\n            })\r\n        } : {}}\r\n        columns={[\r\n          { title: \"Name\", field: \"name\" },\r\n          { title: \"Price\", field: \"price\"},\r\n          { title: \"Description\", field: \"description\" },\r\n          {\r\n            title: \"Picture\",\r\n            field: \"picture\"\r\n          }\r\n        ]}\r\n        data={item.meals.map(food => ({\r\n          name: food.name,\r\n          description: food.description,\r\n          picture: food.picture,\r\n          price: food.price\r\n        }))}\r\n        title={item.name}\r\n      />\r\n    )) : <CircularProgress/>;\r\n\r\n    return <div style={{ maxWidth: \"100%\" }}>{allTables}</div>;\r\n  }\r\n}\r\n\r\nexport default Table","import React from 'react';\r\nimport Table from './Table';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nclass MenuSection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allData: [],\r\n            isLoading: false\r\n          };\r\n          this.handleCreateData = this.handleCreateData.bind(this);\r\n          this.handleDeleteData = this.handleDeleteData.bind(this);\r\n          this.handleUpdateData = this.handleUpdateData.bind(this);\r\n          this.refetchData = this.refetchData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refetchData();\r\n    }\r\n\r\n    refetchData() {\r\n      this.setState({isLoading: true})\r\n      fetch(\"https://8qqznzyrgh.execute-api.us-east-1.amazonaws.com/develop/menuitems\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n            allData: data,\r\n            isLoading: false\r\n        });\r\n      },\r\n      err => console.log(\"err:\" + err));\r\n    }\r\n\r\n    handleCreateData(insert) {\r\n        let collection = insert.collection;\r\n        let groupName = insert.groupName;\r\n        delete insert[\"collection\"];\r\n        delete insert[\"groupName\"];\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json',  'X-COG-ID': this.props.authKey},\r\n            body: JSON.stringify({ \r\n                operation: \"insert\",\r\n                collection: collection,\r\n                groupName: groupName,\r\n                item: insert\r\n            })\r\n        };\r\n\r\n        fetch(\"https://8qqznzyrgh.execute-api.us-east-1.amazonaws.com/develop/menuitems\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(this.refetchData);\r\n    }\r\n\r\n    handleUpdateData(oldData, newData) {\r\n      let collection = oldData.collection;\r\n      let groupName = oldData.groupName;\r\n      //necessary because cannot delete tableData without messing up page\r\n      let itemCopy = {\r\n        name: oldData.name,\r\n        price: oldData.price,\r\n        description: oldData.description,\r\n        picture: oldData.picture\r\n      }\r\n\r\n      //To swap misordered values due to table library making it alphabetical order\r\n      let newData2 = {\r\n        name: newData.name,\r\n        price: newData.price,\r\n        description: newData.description,\r\n        picture: newData.picture\r\n      }\r\n\r\n      const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json', 'X-COG-ID': this.props.authKey},\r\n          body: JSON.stringify({ \r\n              operation: \"update\",\r\n              collection: collection,\r\n              groupName: groupName,\r\n              item: newData2,\r\n              old: itemCopy\r\n          })\r\n      };\r\n      fetch(\"https://8qqznzyrgh.execute-api.us-east-1.amazonaws.com/develop/menuitems\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(this.refetchData);\r\n    }\r\n\r\n    handleDeleteData(oldData) {\r\n      this.setState({isLoading: true});\r\n\r\n      let collection = oldData.collection;\r\n      let groupName = oldData.groupName;\r\n      //necessary because cannot delete tableData without messing up page\r\n      let itemCopy = {\r\n        name: oldData.name,\r\n        price: oldData.price,\r\n        description: oldData.description,\r\n        picture: oldData.picture\r\n      }\r\n\r\n      const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' , 'X-COG-ID': this.props.authKey },\r\n          body: JSON.stringify({ \r\n              operation: \"delete\",\r\n              collection: collection,\r\n              groupName: groupName,\r\n              item: itemCopy\r\n          })\r\n      };\r\n      fetch(\"https://8qqznzyrgh.execute-api.us-east-1.amazonaws.com/develop/menuitems\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(this.refetchData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <ol>\r\n              <li>Sign into a Kigaru Admin Account</li>\r\n              <li>Click <EditIcon/> to modify a row\r\n                <ul>\r\n                  <li>After editing, click the check button</li>\r\n                  <li>After a bit, the changes will be updated on the page. Don't edit anything while changes are loading</li>\r\n                </ul>\r\n              </li>\r\n              <li>To add an item, click <AddBoxIcon/> and enter the data you want</li>\r\n              <ul>\r\n                  <li>For the time being, I have not integrated adding pictures. That will come in the future</li>\r\n                  <li>Similarly, wait until you see the changes get updated</li>\r\n              </ul>\r\n              <li>Delete a row by clicking <DeleteOutlineIcon/> and confirming</li>\r\n            </ol>\r\n            <div style={{padding: \"10px\"}}>\r\n            Each of these tables allow you to seach by any of the fields (name, price, description) and also allow you to expand the number of rows displayed. Also works on mobile. Contact mark.huynh.oregon@gmail.com for any issues.\r\n            </div>\r\n\r\n            \r\n            <div style={{textAlign: \"center\"}}><h1>Sushi</h1></div>\r\n            <Table\r\n              label={\"Sushi\"}\r\n              isAuth={this.props.isAuth}\r\n              isLoading={this.state.isLoading}\r\n              onCreate={this.handleCreateData}\r\n              onUpdate={this.handleUpdateData}\r\n              onDelete={this.handleDeleteData}\r\n              items={this.state.allData.sushi}\r\n            />\r\n            <div style={{textAlign: \"center\"}}><h1>Appetizers</h1></div>\r\n            <Table\r\n              label={\"Appetizers\"}\r\n              isAuth={this.props.isAuth}\r\n              isLoading={this.state.isLoading}\r\n              onCreate={this.handleCreateData}\r\n              onUpdate={this.handleUpdateData}\r\n              onDelete={this.handleDeleteData}\r\n              items={this.state.allData.appetizers}\r\n            />\r\n            <div style={{textAlign: \"center\"}}><h1>Main Dishes</h1></div>\r\n            <Table\r\n              label={\"MainDish\"}\r\n              isAuth={this.props.isAuth}\r\n              isLoading={this.state.isLoading}\r\n              onCreate={this.handleCreateData}\r\n              onUpdate={this.handleUpdateData}\r\n              onDelete={this.handleDeleteData}\r\n              items={this.state.allData.main_dishes}\r\n            />\r\n            <div style={{textAlign: \"center\"}}><h1>Drinks, Etc</h1></div>\r\n            <Table\r\n              label={\"Drinks\"}\r\n              isAuth={this.props.isAuth}\r\n              isLoading={this.state.isLoading}\r\n              onCreate={this.handleCreateData}\r\n              onUpdate={this.handleUpdateData}\r\n              onDelete={this.handleDeleteData}\r\n              items={this.state.allData.drinks}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuSection","\r\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Amplify, { Auth } from \"aws-amplify\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nAmplify.configure({\r\n  region: \"us-east-1\",\r\n  userPoolId: \"us-east-1_q9e7jrM82\",\r\n  userPoolWebClientId: \"3l96mngn0f61gpb64o4nsu3sks\"\r\n});\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function userAuth(value) {\r\n    userHasAuthenticated(value);\r\n    props.onUserAuth(value);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setLoading(true);\r\n      let val = await Auth.signIn(username, password);\r\n      props.onLogin(val.signInUserSession.idToken.jwtToken);\r\n      userAuth(true);\r\n      alert(\"Logged in\");\r\n    } catch (e) {\r\n      alert(e.message);\r\n      userAuth(false);\r\n    }\r\n  }\r\n\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n\r\n  async function handleLogout() {\r\n    await Auth.signOut();\r\n    userAuth(false);\r\n    props.onLogin(\"\");\r\n  }\r\n\r\n  function onLoad() {\r\n    Auth.currentSession()\r\n      .then(data => props.onLogin(data.idToken.jwtToken))\r\n      .then(userAuth(true))\r\n      .catch(e => {\r\n        console.log(e);\r\n        userAuth(false);\r\n        props.onLogin(\"\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {isAuthenticated ? (\r\n        isLoading ? <CircularProgress /> :\r\n        <button onClick={handleLogout}>Logout</button>\r\n      ) : (\r\n        <div className=\"Login\">\r\n          <form onSubmit={handleSubmit}>\r\n            <FormGroup controlId=\"username\">\r\n              Username\r\n              <FormControl\r\n                autoFocus\r\n                type=\"username\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"password\">\r\n              Password\r\n              <FormControl\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n            </FormGroup>\r\n            {isLoading ? <CircularProgress/> : \r\n            <Button block disabled={!validateForm()} type=\"submit\">\r\n              Login\r\n            </Button>}\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport MenuSection from \"./MenuSection\";\r\nimport \"./App.css\";\r\nimport Login from './Login';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authKey: \"\",\r\n      isAuthenticated: false\r\n    }\r\n    this.loginCallback = this.loginCallback.bind(this);\r\n    this.userAuthCallback = this.userAuthCallback.bind(this);\r\n  }\r\n  \r\nloginCallback(value) {\r\n  this.setState({\r\n    authKey: value\r\n  })\r\n}\r\n\r\nuserAuthCallback(value) {\r\n  this.setState({\r\n    isAuthenticated: value\r\n  })\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <Login onLogin={this.loginCallback} onUserAuth={this.userAuthCallback}/>\r\n      <MenuSection authKey={this.state.authKey} isAuth={this.state.isAuthenticated}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}